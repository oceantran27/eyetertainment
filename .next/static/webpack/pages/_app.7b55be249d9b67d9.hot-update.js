"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/webgazerSingleton.js":
/*!****************************************!*\
  !*** ./src/utils/webgazerSingleton.js ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   endWebGazer: () => (/* binding */ endWebGazer),\n/* harmony export */   initWebGazer: () => (/* binding */ initWebGazer)\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ initWebGazer,endWebGazer auto */ let webgazerInstance;\nconst initWebGazer = async ()=>{\n    if (!webgazerInstance) {\n        // const webgazerModule = await import('webgazer');\n        // webgazerInstance = webgazerModule.default;\n        const script = document.createElement(\"script\");\n        script.src = \"https://webgazer.cs.brown.edu/webgazer.js\";\n        script.async = true;\n        console.log(window.webgazer);\n        webgazerInstance = window.webgazer.default;\n        await webgazerInstance.setRegression('ridge').begin();\n        console.log(\"WebGazer has started.\");\n    }\n    return webgazerInstance;\n};\nconst endWebGazer = ()=>{\n    if (webgazerInstance) {\n        webgazerInstance.end();\n        webgazerInstance = null; // Reset the instance\n        console.log(\"WebGazer has ended.\");\n    }\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvd2ViZ2F6ZXJTaW5nbGV0b24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OEVBRUEsSUFBSUE7QUFFSixNQUFNQyxlQUFlO0lBQ25CLElBQUksQ0FBQ0Qsa0JBQWtCO1FBQ3JCLG1EQUFtRDtRQUNuRCw2Q0FBNkM7UUFFN0MsTUFBTUUsU0FBU0MsU0FBU0MsYUFBYSxDQUFDO1FBQ3RDRixPQUFPRyxHQUFHLEdBQUc7UUFDYkgsT0FBT0ksS0FBSyxHQUFHO1FBRWZDLFFBQVFDLEdBQUcsQ0FBQ0MsT0FBT0MsUUFBUTtRQUUzQlYsbUJBQW1CUyxPQUFPQyxRQUFRLENBQUNDLE9BQU87UUFFMUMsTUFBTVgsaUJBQWlCWSxhQUFhLENBQUMsU0FBU0MsS0FBSztRQUNuRE4sUUFBUUMsR0FBRyxDQUFDO0lBRWQ7SUFFQSxPQUFPUjtBQUNUO0FBRUEsTUFBTWMsY0FBYztJQUNsQixJQUFJZCxrQkFBa0I7UUFDcEJBLGlCQUFpQmUsR0FBRztRQUNwQmYsbUJBQW1CLE1BQU0scUJBQXFCO1FBQzlDTyxRQUFRQyxHQUFHLENBQUM7SUFDZDtBQUNGO0FBRXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy93ZWJnYXplclNpbmdsZXRvbi5qcz9mMjEyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xyXG5cclxubGV0IHdlYmdhemVySW5zdGFuY2U7XHJcblxyXG5jb25zdCBpbml0V2ViR2F6ZXIgPSBhc3luYyAoKSA9PiB7XHJcbiAgaWYgKCF3ZWJnYXplckluc3RhbmNlKSB7XHJcbiAgICAvLyBjb25zdCB3ZWJnYXplck1vZHVsZSA9IGF3YWl0IGltcG9ydCgnd2ViZ2F6ZXInKTtcclxuICAgIC8vIHdlYmdhemVySW5zdGFuY2UgPSB3ZWJnYXplck1vZHVsZS5kZWZhdWx0O1xyXG5cclxuICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XHJcbiAgICBzY3JpcHQuc3JjID0gXCJodHRwczovL3dlYmdhemVyLmNzLmJyb3duLmVkdS93ZWJnYXplci5qc1wiO1xyXG4gICAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyh3aW5kb3cud2ViZ2F6ZXIpO1xyXG5cclxuICAgIHdlYmdhemVySW5zdGFuY2UgPSB3aW5kb3cud2ViZ2F6ZXIuZGVmYXVsdDtcclxuXHJcbiAgICBhd2FpdCB3ZWJnYXplckluc3RhbmNlLnNldFJlZ3Jlc3Npb24oJ3JpZGdlJykuYmVnaW4oKTtcclxuICAgIGNvbnNvbGUubG9nKFwiV2ViR2F6ZXIgaGFzIHN0YXJ0ZWQuXCIpO1xyXG5cclxuICB9XHJcblxyXG4gIHJldHVybiB3ZWJnYXplckluc3RhbmNlO1xyXG59O1xyXG5cclxuY29uc3QgZW5kV2ViR2F6ZXIgPSAoKSA9PiB7XHJcbiAgaWYgKHdlYmdhemVySW5zdGFuY2UpIHtcclxuICAgIHdlYmdhemVySW5zdGFuY2UuZW5kKCk7XHJcbiAgICB3ZWJnYXplckluc3RhbmNlID0gbnVsbDsgLy8gUmVzZXQgdGhlIGluc3RhbmNlXHJcbiAgICBjb25zb2xlLmxvZyhcIldlYkdhemVyIGhhcyBlbmRlZC5cIik7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IHsgaW5pdFdlYkdhemVyLCBlbmRXZWJHYXplciB9OyJdLCJuYW1lcyI6WyJ3ZWJnYXplckluc3RhbmNlIiwiaW5pdFdlYkdhemVyIiwic2NyaXB0IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiYXN5bmMiLCJjb25zb2xlIiwibG9nIiwid2luZG93Iiwid2ViZ2F6ZXIiLCJkZWZhdWx0Iiwic2V0UmVncmVzc2lvbiIsImJlZ2luIiwiZW5kV2ViR2F6ZXIiLCJlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/webgazerSingleton.js\n"));

/***/ })

});